# We declare this a python project because it is easier to install arbitrary
# versions of rust to the virtual machine than it is to install arbitrary
# versions of python.  rsp2 requires python 3.6+, and non-python environments
# only have easy access to python 3.5.
#
# also, rust-cpython's .travis.yml does it, so we can just copy what they do. =P
language: python
sudo: false

python: 3.6

addons:
  apt:
    packages:
    - gfortran
    - stow

env:
  global:
  - OPENMPI_VERSION=3.1.2
  - OPENMPI_VERSION_SHORT=3.1
  - LAMMPS_POTENTIALS=$HOME/lammps/potentials
  - RUSTUP_HOME=$HOME/deps
  - CARGO_HOME=$HOME/deps

matrix:
  include:
    - name: MPI
      env: RUST_VERSION=stable RSP2_FEATURES=--features=mpi-support
    - name: Without MPI
      env: RUST_VERSION=stable RSP2_FEATURES=--no-default-features
    - name: Nightly (MPI)
      env: RUST_VERSION=nightly RSP2_FEATURES=--features=mpi-support,nightly
  allow_failures:
    - name: Nightly (MPI)

install:
- pwd
- mkdir -p ~/cache
- mkdir -p ~/build
- mkdir -p ~/deps
- du -hs ~/cache/* || true
- export PYTHON_LIB=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
- export PATH="$HOME/deps/bin:$PATH"
- export LIBRARY_PATH="$HOME/deps/lib:$PYTHON_LIB:$LIBRARY_PATH"
- export LD_LIBRARY_PATH="$HOME/deps/lib:$PYTHON_LIB:$LD_LIBRARY_PATH"

- python -c "import sysconfig; print('\n'.join(map(repr,sorted(sysconfig.get_config_vars().items()))))"
- curl -sL https://static.rust-lang.org/rustup.sh -o ~/build/rustup.sh
- sh ~/build/rustup.sh --default-toolchain=$RUST_VERSION -y
# - find $PYTHON_LIB
- rustc -V

# additional python packages
- pip install --upgrade pip
- pip install --progress-bar=off setuptools wheel
- pip install --progress-bar=off --only-binary=numpy,scipy numpy scipy
- pip install --progress-bar=off spglib
- pip install --progress-bar=off phonopy==1.13.0.64 # rsp2 does not yet support 1.13.2
- pip install --progress-bar=off pymatgen

- $TRAVIS_BUILD_DIR/travis/install-openmpi.sh

# get potentials
- git clone https://github.com/lammps/lammps $HOME/lammps --depth=1

- $TRAVIS_BUILD_DIR/travis/cargo-cache.sh load

script:
- cargo build --all $RSP2_FEATURES
- cargo build --all $RSP2_FEATURES --release
- cargo test --all $RSP2_FEATURES
- cargo test --all $RSP2_FEATURES --release -- --ignored

before_cache:
- $TRAVIS_BUILD_DIR/travis/prune-target.sh
- $TRAVIS_BUILD_DIR/travis/cargo-cache.sh store
- du --max-depth=3 ~/cache || true

cache:
  # 'cache: cargo' and 'cache: ccache' cannot be used with 'language: python'
  directories:
    - /home/travis/cache

notifications:
  email:
    on_success: never

branches:
  only:
  - master
  - develop
  - lammps-sys-5
